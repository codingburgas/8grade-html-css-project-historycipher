@import url(main.css);

:root {
    /* every css file should include this root */
    --clr-blue-50: #fafdff;
    --clr-blue-100: #ddedfc;
    --clr-blue-200: #c2e0fb;
    --clr-blue-300: #99cdf7;
    --clr-blue-400: #68b1f2;
    --clr-blue-500: #4592ec;
    --clr-blue-600: #3076e0;
    --clr-blue-700: #2761ce;
    --clr-blue-800: #264fa7;
    --clr-blue-900: #244584;
    --clr-blue-950: #1f335f;
    --clr-blue-1000: #172748;
    --clr-blue-1050: #0e1629;

    --ff-Montserrat: 'Montserrat';
    --ff-Inter: 'Inter';

    --hover-duration-slow: 350ms;
    --hover-duration-normal: 300ms;
    --hover-duration-fast: 200ms;
}

.hero {
    min-height: 95dvh;
    color: var(--clr-blue-50);
    --gap: 2.8rem;
}

.heroGridLayout {
    display: grid;
    grid-template-columns: 1fr 1fr;
    max-width: 1230px;
    margin-inline: auto;
}

.heroBackground {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: -999;
}

.heroBackground video {
    width: 100%;
    height: 100%;
    object-fit: cover; /* for the video to align to the screen */
}

.heroBackgroundOverlay {
    position: absolute; /* for the overlay to be on top of the heroBackground */
    top: 0; /* aligns it to the parent */
    width: 100%;
    height: 100%;
    background: rgba(10, 14, 21, 0.8);
}

.heroContainer {
    padding-top: 8rem;
}

.heroTitle {
    font-family: var(--ff-Montserrat);
    font-size: 3.5rem;
    line-height: 1.1;
    font-weight: 800;
    margin-bottom: var(--gap);
}

.heroTitle span {
    font-style: italic;
    color: var(--clr-blue-500);
}

.heroParagraph {
    font-size: 1.175rem;
    margin-bottom: var(--gap);
}

.heroButton {
    background-color: var(--clr-blue-600);
    color: white;
    font-weight: 600;
    border: none;
    padding: 12px 24px;
    border-radius: 5px;
    transition: var(--hover-duration-normal);
    cursor: pointer;
}

.heroButton:hover {
    background-color: var(--clr-blue-800);
    transform: scale(1.04);
}

.heroLocations {
    padding-top: 1.2rem;
}

.heroLocationsTitle {
    font-size: 1.4rem;
    text-align: end;
}

.heroLocationStairway {
    position: relative; /* for it to start after the navbar, not before it */
}

.heroLocationStairwayCard {
    width: 270px;
    background-color: rgba(0, 0, 0, 0.3);
    backdrop-filter: blur(5px);
    border-radius: 24px;
    padding: 14px;
}

.heroLocationStairway a {
    position: absolute; /* allows the cards to overflow */
    transition: var(--hover-duration-normal);
}

.card1 {
    right: 390px;
    top: 330px;
}

.card2 {
    right: 260px;
    top: 220px;
}

.card3 {
    right: 130px;
    top: 110px;
}
.card4 {
    right: 0;
    top: 0;
}

.heroLocationStairway a:hover {
    transform: scale(1.04); /* makes it grown in size when it's hovered */
    z-index: 800; /* brings the card to the front */
}

.heroLocationStairwayCard img {
    width: inherit;
    height: 190px;
    border-top-left-radius: 16px;
    border-top-right-radius: 16px;
}

.cardIconAndCity {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-top: 1rem;
    margin-bottom: 0.7rem;
}

.heroLocationStairwayCardTitle {
    font-size: 1.125rem;
}

.heroLocationStairwayCardParagraph {
    font-size: 0.825rem;
}

.bestSellersTitle {
    text-align: center;
    font-size: 2.25rem;
    font-weight: 800;
    font-family: var(--ff-Montserrat);
    margin-top: 3rem;
    margin-bottom: 0.5rem;
}

.bestSellersParagpraph {
    text-align: center;
    font-size: 1.125rem;
    margin-bottom: 2rem;
}

.bestSellersLayoutCard img {
    max-width: 280px;
    height: 210px;
    border-top-right-radius: inherit;
    border-top-left-radius: inherit;
}

.CardInformation {
    padding: 1.5rem;
}

.cardTitle {
    margin-bottom: 0.5rem;
}

.cardParagpraph {
    font-size: 0.85rem;
    opacity: 70%;
    margin-bottom: 0.5rem;
}

.cardPrice {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.cardPrice p {
    opacity: 100%;
    font-weight: 800;
    font-size: 1.25rem;
}

.cardPrice p span {
    font-weight: 500;
    opacity: 70%;
    font-size: 0.9rem;
}

.cardPrice button {
    background-color: var(--clr-blue-100);
    color: var(--clr-blue-600);
    font-weight: 600;
    font-size: 0.9rem;
    border: none;
    padding: 8px 16px;
    border-radius: 5px;
    transition: var(--hover-duration-normal);
    cursor: pointer;
}

.cardPrice button:hover {
    background-color: var(--clr-blue-200);
}

/* infinite scroll animation */
.bestSellersLayout {
    position: relative;
    max-width: 1400px;
    margin-inline: auto;
    height: 400px;
    padding-top: 1rem;
    overflow: hidden;
    /* the first 2 rgba colors are for the left side,
       and the second 2 rgba colors are for the right side */
    mask-image: linear-gradient(
        to right,
        rgba(0, 0, 0, 0),
        rgba(0, 0, 0, 1) 10%,

        rgba(0, 0, 0, 1) 90%,
        rgba(0, 0, 0, 0)
    );
}

@keyframes scrollLeft {
    from {
        left: 100%;
    }
    to {
        /* the width of the items */
        left: -280px;
    }
}

.bestSellersLayoutCard {
    position: absolute;
    border-radius: 8px;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 5px 15px 0px;
    margin-bottom: 2rem;
    transition: var(--hover-duration-normal);

    --n: 5; /* numbers of items */
    --s: 45s; /* the duration of the animation */
    animation-name: scrollLeft;
    animation-duration: var(--s);
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

/* 
The formula for this calculation is:
Duration * Delay * -1

Duration = the 'animation-duration' / the number of items

Delay = the number of items - the current item

-1: just makes the number negative. A negative 
number controls where the animation starts
*/
.item1 {
    animation-delay: calc(var(--s) / var(--n) * (var(--n) - 1) * -1);
}

.item2 {
    animation-delay: calc(var(--s) / var(--n) * (var(--n) - 2) * -1);
}

.item3 {
    animation-delay: calc(var(--s) / var(--n) * (var(--n) - 3) * -1);
}

.item4 {
    animation-delay: calc(var(--s) / var(--n) * (var(--n) - 4) * -1);
}

.item5 {
    animation-delay: calc(var(--s) / var(--n) * (var(--n) - 5) * -1);
}

.bestSellersLayoutCard:hover {
    transform: scale(1.04); /* makes it grown in size when it's hovered */
}

.reservation {
    padding: 2rem 0 4rem 0;
}

.reservationContainer {
    background-color: var(--clr-blue-50);
    max-width: 600px;
    margin-inline: auto;
    box-shadow: rgba(0, 0, 0, 0.15) 0px 5px 15px 0px;
    border-radius: 8px;
    padding: 2rem;
    transition: var(--hover-duration-normal);
    --gap: 0.8rem;
}

.reservationContainer:hover {
    transform: scale(1.02);
}

.reservationTitle {
    text-align: center;
    font-size: 2rem;
    font-weight: 800;
    font-family: var(--ff-Montserrat);
    margin-bottom: 1.8rem;
}

.reservationForm label {
    font-size: 0.935rem;
}

.reservationInputGroup {
    margin-bottom: var(--gap);
}

.reservationInputGroup select {
    width: 100%;
    padding: 10px;
    border-radius: 4px;
    border: 2px solid rgba(0, 0, 0, 0.18);
}

.reservationInputGroup select:focus {
    outline: none;
    border: 2px solid var(--clr-blue-500);
    box-shadow: 0 0 0 2px var(--clr-blue-100);
    border-radius: 4px;
    background-color: #fff;
}

.reservationDate {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin-bottom: var(--gap);
}

.reservationDateRow input {
    width: 100%;
    padding: 6px;
    border-radius: 4px;
    border: 2px solid rgba(0, 0, 0, 0.18);
}

.reservationDateRow input:focus {
    outline: none;
    border: 2px solid var(--clr-blue-500);
    box-shadow: 0 0 0 2px var(--clr-blue-100);
    border-radius: 4px;
    background-color: #fff;
}

.reservationButton {
    margin-top: var(--gap);
    background-color: var(--clr-blue-600);
    color: var(--clr-blue-50);
    width: 100%;
    border: none;
    border-radius: 4px;
    padding: 12px;
    font-weight: 600;
    transition: var(--hover-duration-normal);
    cursor: pointer;
}

.reservationButton:hover {
    background-color: var(--clr-blue-800);
}
